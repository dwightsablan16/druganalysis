{"backend_state":"ready","kernel":"python3","kernel_usage":{"cpu":39.25438596491275,"memory":38555648},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.8"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"f1d5db","input":"","pos":19,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":215,"id":"763a98","input":"#for the remaining listings in where Total Mass = 0 \n    #if unit mass != 0, get total mass\n# for index, row in subset_data.iterrows():\n#     if (row['Unit_mass_in_grams'] != 0):\n#         data.at[index, 'Total_mass_in_grams'] = row['Count'] * row['Quantity'] * row ['Unit_mass_in_grams']","pos":17,"scrolled":true,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":263,"id":"38adbf","input":"#If values in columns 5,6,7,9,10 == 0 then set the 'Unit mass in grams' column = 'Total mass in grams'\n\n#FOR EVERY ROW IN DATA\n# for index, row in data.iterrows():\n#     #IF ROWS 5 - 10 ARE ZEROS, SET 'TOTAL' = 'UNIT'\n#     if row['Count'] == 0 and row['can_be_vaped'] == 0 and row['is_edible'] == 0 and row ['THC_purity'] == 0 and row['Quantity'] == 0 and row['Unit'] == 0:\n#         data.at[index, 'Total_mass_in_grams'] = data.at[index, 'Unit_mass_in_grams']\n#     #ELSE IF ROW DOESNT EQUAL ZERO GET MASS OF THAT ROW\n#     elif row['Unit_mass_in_grams'] != 0:\n#         data.at[index, 'Total_mass_in_grams'] = getTotalMassWithGram(row['Count'], row['Quantity'],row['Unit_mass_in_grams'])","pos":16,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":269,"id":"a667b8","input":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom itertools import compress\n\nfrom datetime import datetime\nfrom dateutil.parser import parse\n\nimport math\nimport os\nimport copy\nimport pickle","pos":0,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":270,"id":"4f30a6","input":"conversion_dict = dict({'g': 1,\n                         'kg': 1000,\n                         'kilo': 1000,\n                         'lb': 453.592,\n                         'mcg': 1e-06,\n                         'mg': 0.001,\n                         'ounce': 28.35,\n                         'oz': 28.35,\n                         'pound': 453.592,\n                         'ug': 1e-06,\n                         '¬ug': 1e-06,\n                         '¬µg': 1e-06,\n                         'µg': 1e-06,\n                          'ml': 1,\n                          0: 0})","pos":2,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":271,"id":"f251f9","input":"data = pd.read_csv(\"marijuana_unique.csv\")","pos":3,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":272,"id":"4d8dfe","input":"data = data.fillna(0)","pos":4,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":273,"id":"cf8220","input":"data.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>vendor_name</th>\n      <th>bitcoin_amt</th>\n      <th>USD</th>\n      <th>date</th>\n      <th>product_description</th>\n      <th>Count</th>\n      <th>can_be_vaped</th>\n      <th>is_edible</th>\n      <th>THC purity (%)</th>\n      <th>Quantity/mass</th>\n      <th>Unit</th>\n      <th>Unit mass in grams</th>\n      <th>Total mass in grams</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Cannabuds</td>\n      <td>-1.0</td>\n      <td>51.50</td>\n      <td>2018-11-01 0:00:00</td>\n      <td>4g Shatter! Lemon Tree! New Vendor Special!</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>4.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Cannabuds</td>\n      <td>-1.0</td>\n      <td>11.67</td>\n      <td>2018-07-04 0:00:00</td>\n      <td>1g Rosin! Lemon Tree! (Nug run) New Vendor Spe...</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Cannabuds</td>\n      <td>-1.0</td>\n      <td>138.00</td>\n      <td>2018-12-08 0:00:00</td>\n      <td>1 oz Master Kush! New Vendor Special</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>oz</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Cannabuds</td>\n      <td>-1.0</td>\n      <td>108.00</td>\n      <td>2018-08-07 0:00:00</td>\n      <td>1 oz Fruity Pebbles OG! New Vendor Special</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>oz</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Cannabuds</td>\n      <td>-1.0</td>\n      <td>60.00</td>\n      <td>2018-12-23 0:00:00</td>\n      <td>5g Shatter! Lemon Tree! New Vendor Special!</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>5.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  vendor_name  bitcoin_amt     USD                date  \\\n0   Cannabuds         -1.0   51.50  2018-11-01 0:00:00   \n1   Cannabuds         -1.0   11.67  2018-07-04 0:00:00   \n2   Cannabuds         -1.0  138.00  2018-12-08 0:00:00   \n3   Cannabuds         -1.0  108.00  2018-08-07 0:00:00   \n4   Cannabuds         -1.0   60.00  2018-12-23 0:00:00   \n\n                                 product_description  Count can_be_vaped  \\\n0        4g Shatter! Lemon Tree! New Vendor Special!    0.0            0   \n1  1g Rosin! Lemon Tree! (Nug run) New Vendor Spe...    0.0            0   \n2               1 oz Master Kush! New Vendor Special    0.0            0   \n3         1 oz Fruity Pebbles OG! New Vendor Special    0.0            0   \n4        5g Shatter! Lemon Tree! New Vendor Special!    0.0            0   \n\n   is_edible  THC purity (%)  Quantity/mass Unit  Unit mass in grams  \\\n0        0.0             0.0            0.0    0                 4.0   \n1        0.0             0.0            0.0    0                 1.0   \n2        0.0             0.0            1.0   oz                 0.0   \n3        0.0             0.0            1.0   oz                 0.0   \n4        0.0             0.0            0.0    0                 5.0   \n\n   Total mass in grams  \n0                  0.0  \n1                  0.0  \n2                  0.0  \n3                  0.0  \n4                  0.0  "},"exec_count":273,"output_type":"execute_result"}},"pos":5,"scrolled":true,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":274,"id":"c2ae5f","input":"#Take out all deleted listings\ndata = data[data.product_description != 0]","pos":6,"scrolled":true,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":275,"id":"19caae","input":"#Make a list of all the wanted units\n_, unique_units = pd.factorize(data['Unit'])\n\nprint ('Unique units: ', unique_units)\n\nunits_list = [0, 'oz', 'ml', 'lb', 'mg', 'kg', 'g']\n\nprint ('Unit list: ', units_list)","output":{"0":{"name":"stdout","output_type":"stream","text":"Unique units:  Index([        0,      'oz',      'ml',      'lb',     'bar',      'mg',\n       'capsule',      'kg',     'ltr',       'g',    'seed',       '0',\n          'pill'],\n      dtype='object')\nUnit list:  [0, 'oz', 'ml', 'lb', 'mg', 'kg', 'g']\n"}},"pos":7,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":276,"id":"0b7d89","input":"#Get data that have units in unit list\ndata = data[data.Unit.isin(units_list)]","pos":8,"scrolled":true,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":277,"id":"1e1bae","input":"#Set new names for columns in dataframe\ndata.columns = ['vendor_name', 'bitcoin_amt', 'USD', 'date', 'product_description',\n       'Count', 'can_be_vaped', 'is_edible', 'THC_purity', 'Quantity',\n       'Unit', 'Unit_mass_in_grams', 'Total_mass_in_grams']","pos":9,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":278,"id":"3f0974","input":"#convert unit mass column to float\ndata.Unit_mass_in_grams = data.Unit_mass_in_grams.astype(float)","pos":10,"scrolled":true,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":279,"id":"57567d","input":"#define function to get the conversion for each rate of each row\ndef getTotalMassWithUnit(count,quantity,unit):\n    if count == 0:\n        totalMass = quantity * conversion_dict[unit]\n    elif quantity == 0:\n        totalMass = count * conversion_dict[unit]\n    else:\n        totalMass = (count * quantity) * conversion_dict[unit]\n        \n    return totalMass","pos":11,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":280,"id":"dc462c","input":"#define function to get the conversion for each rate of each row\ndef getTotalMassWithGram(count,quantity,gram):\n    if count == 0 and quantity == 0:\n        totalMass = gram\n    elif quantity == 0 and count != 0:\n        totalMass = count * gram\n    elif count == 0 and quantity != 0:\n        totalMass = quantity * gram\n        \n    return totalMass","pos":12,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":281,"id":"543753","input":"#for every row that has a Unit in units list and a total mass of 0\nfor index, row in data.iterrows():\n    if (row['Unit'] in units_list and row['Total_mass_in_grams'] == 0):\n        data.at[index, 'Total_mass_in_grams'] = getTotalMassWithUnit(row['Count'], row['Quantity'],row['Unit'])","pos":13,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":282,"id":"86c9e8","input":"for index, row in data.iterrows():\n    if row['Unit_mass_in_grams'] != 0:\n        data.at[index, 'Total_mass_in_grams'] = getTotalMassWithGram(row['Count'], row['Quantity'],row['Unit_mass_in_grams'])","pos":14,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":284,"id":"44002e","input":"# len (data[data['Total_mass_in_grams'] == 0])","output":{"0":{"data":{"text/plain":"277"},"exec_count":284,"output_type":"execute_result"}},"pos":15,"scrolled":true,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":285,"id":"2c3654","input":"#Export dataframe as csv\ndata.to_csv(r'Total_Marijuana_Mass.csv')","pos":18,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"088dd7","input":"Create `conversion` dictionary, containing conversion from every metric to grams","pos":1,"state":"done","type":"cell"}
{"last_load":1563994463022,"type":"file"}