{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":80977920},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.8"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"50b966","input":"def getDrugs(row):\n    row_preds = []\n    for col_name, value in row.items():\n        if value == 1:\n            row_preds.append(col_name)\n    return(row_preds)","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"78d51c","input":"indy_data['drug_preds'] = indy_data.iloc[:,26:206].apply(getDrugs, axis = 1)","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"fed615","input":"import pandas as pd\ndf = pd.DataFrame({'name': ['t1', 't2', 't3', 't4', 't5', 't6'], 'a' : [0,1,1,0,0,1], 'b' : [1,0,0,0,1,1]})\ndf","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>a</th>\n      <th>b</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>t1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>t2</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>t3</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>t4</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>t5</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>t6</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  name  a  b\n0   t1  0  1\n1   t2  1  0\n2   t3  1  0\n3   t4  0  0\n4   t5  0  1\n5   t6  1  1"},"exec_count":1,"output_type":"execute_result"}},"pos":0,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"980382","input":"df = pd.DataFrame({'pd': ['hi','bye','hi','hi','bye','bye','bye'],\n                       'vendor_name': [10,13,31, 16, 18, 9, 43]})\nother = pd.DataFrame({'pd': ['hi','bye'],\n                          'mass': [10, 15]})\nprint(df)\nprint('\\n')\nprint(other)","output":{"0":{"name":"stdout","output_type":"stream","text":"    pd  vendor_name\n0   hi           10\n1  bye           13\n2   hi           31\n3   hi           16\n4  bye           18\n5  bye            9\n6  bye           43\n\n\n    pd  mass\n0   hi    10\n1  bye    15\n"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"f92dcc","input":"df.join(other.set_index('pd'), on = 'pd')","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pd</th>\n      <th>vendor_name</th>\n      <th>mass</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>hi</td>\n      <td>10</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>bye</td>\n      <td>13</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>hi</td>\n      <td>31</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>hi</td>\n      <td>16</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>bye</td>\n      <td>18</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>bye</td>\n      <td>9</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>bye</td>\n      <td>43</td>\n      <td>15</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    pd  vendor_name  mass\n0   hi           10    10\n1  bye           13    15\n2   hi           31    10\n3   hi           16    10\n4  bye           18    15\n5  bye            9    15\n6  bye           43    15"},"exec_count":14,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"1162cc","input":"for idx, row in df.iterrows(): # for each row\n    row_preds = [] # empty list for row predictions\n\n    for col_name, value in row.items(): # for each column in the row\n        if value == 1: # if the value is 1\n            row_preds.append(col_name) # append the column name to the list\n    df.at[idx, 'drug_preds'] = row_preds\n    print(row_preds)","output":{"0":{"name":"stdout","output_type":"stream","text":"['b']\n['a']\n['a']\n[]\n['b']\n['a', 'b']\n"}},"pos":1,"type":"cell"}
{"cell_type":"markdown","id":"84fbd1","input":"## Joining dataframes","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"b9e8df","input":"## Better way","pos":2,"type":"cell"}
{"id":0,"time":1565204845469,"type":"user"}
{"last_load":1565204845611,"type":"file"}