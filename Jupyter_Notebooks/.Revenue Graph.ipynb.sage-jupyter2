{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":80941056},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.8"}},"trust":false,"type":"settings"}
{"cell_type":"code","exec_count":1,"id":"37dbcf","input":"#import necessary libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport plotly\nimport plotly.plotly as py\nimport plotly.graph_objs as go \n\nfrom datetime import datetime\n\nimport pickle","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"eaba85","input":"#everyone else revenue\n#replace number below with this\nee_filtered['USD'].sum()","output":{"0":{"data":{"text/plain":"12900864.249999998"},"exec_count":10,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"78f5f6","input":"everyone_else = ee_filtered.USD.sum()\neveryone_else\n# Pass the row elements as key value pairs to append() function \nee = hi_filtered_data.append({'vendor_name' : 'everyone else' , 'USD' : 12900864.25 } , ignore_index=True)\nee","output":{"0":{"name":"stderr","output_type":"stream","text":"WARNING: Some output was deleted.\n"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"df2443","input":"#then the pie chart is made in plotly","pos":11,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"4df0a9","input":"#read data from pickle\nfile = open('drug_df' , 'rb') #changed from drug_df\nfiltered_data = pickle.load(file)","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"16a0a6","input":"#Order the listings by date\nfiltered_data = filtered_data.sort_values(by=['date'])\n\n#See what dataframe looks like\n#filtered_data.head(10)\nfiltered_data.count()","output":{"0":{"data":{"text/plain":"transaction_id         77279\nvendor_id              77279\nvendor_name            77279\nbitcoin                77279\nUSD                    77279\nproduct_description    77279\ndate                   77279\ndrug_prediction        77279\nrating                 77279\nfeedback               77279\nbuyer_name             77279\ndrug_cats              77279\ndtype: int64"},"exec_count":3,"output_type":"execute_result"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"834b62","input":"# filtered_data.sum(axis = 1, skipna = True) \n# for x in filtered_data.USD:\n#     filtered_data.sum(axis = 1, skipna = True) \n# return(x > 100000)\n\ndef isDrug(categoryList):\n    return('not_drugs' not in categoryList)\nrow_is_drug = filtered_data['drug_prediction'].apply(isDrug)\nfiltered_data = filtered_data[row_is_drug]\n\ndef isDrug(categoryList):\n    return('uncategorizable_listing' not in categoryList)\nrow_is_drug = filtered_data['drug_prediction'].apply(isDrug)\nfiltered_data = filtered_data[row_is_drug]","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"0e8eac","input":"sales_by_vendor = filtered_data['USD'].groupby(filtered_data['vendor_name']).sum()","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"889d7a","input":"sales_by_vendor","output":{"0":{"data":{"text/plain":"vendor_name\n0hp1               5157.36\n1stopquickshop    22081.28\n24-7SmokeShop     16382.80\n25-7              15490.00\n2See                157.04\n                    ...   \nzealotxanax         104.00\nzenego              763.36\nzenon               565.76\nzoobida             894.30\nzouaves           78366.89\nName: USD, Length: 1842, dtype: float64"},"exec_count":6,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"d0ea57","input":"thresh = 100000\nhi_rev_vendors = sales_by_vendor[sales_by_vendor > thresh]\neveryone_else = sales_by_vendor[sales_by_vendor < thresh]\nprint('Vendors before thresholding:', len(sales_by_vendor))\nprint('Vendors after thresholding:', len(hi_rev_vendors))\nprint('Everyone else:', len(everyone_else))","output":{"0":{"name":"stdout","output_type":"stream","text":"Vendors before thresholding: 1842\nVendors after thresholding: 18\nEveryone else: 1824\n"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"b9c90b","input":"# Function checks if item is in the set\ndef isInSet(item, myset):\n    return(item in myset)\n\nhi_rev_vendor_names = list(hi_rev_vendors.index)\n# For every row, check if the vendor is in high-frequency set\nis_hi_rev_row = filtered_data['vendor_name'].apply(isInSet, myset = hi_rev_vendors.index)\n\n# Get dataframe with just the high-frequency set\nhi_filtered_data = filtered_data[is_hi_rev_row]","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"534902","input":"def isInSet(item, myset):\n    return(item in myset)\n\nee_vn = list(everyone_else.index)\n# For every row, check if the vendor is in high-frequency set\nis_ee_row = filtered_data['vendor_name'].apply(isInSet, myset = everyone_else.index)\n\n# Get dataframe with just the high-frequency set\nee_filtered = filtered_data[is_ee_row]","pos":8,"type":"cell"}
{"last_load":1565192627105,"type":"file"}